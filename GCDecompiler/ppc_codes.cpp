
#include <unordered_map>
#include <string>

namespace PPC {

	static const std::unordered_map<int, std::string> primary_codes({{3, "twi"},{7, "mulli"},{8, "subfic"},{10, "cmpli"},{11, "cmpi"},{12, "addic"},{13, "addic."},{14, "addi"},
		{15, "addis"},{16, "bc"},{17, "sc"},{18, "b"},{19, "UNKNOWN SPEC BRANCH"},{20, "rlwimi"},{21, "rlwinm"},{23, "rlwnm"},{24, "ori"},{25, "oris"},{26, "xori"},
		{27, "xoris"},{28, "andi."},{29, "andis."},{31, "UNKNOWN MATH"},{32, "lwz"},{33, "lwzu"},{34, "lbz"},{35, "lbzu"},{36, "stw"},{37, "stwu"},{38, "stb"},{39, "stbu"},
		{40, "lhz"},{41, "lhzu"},{42, "lha"},{43, "lhau"},{44, "sth"},{45, "sthu"},{46, "lmw"},{47, "smtw"},{48, "lfs"},{49, "lfsu"},{50, "lfd"},{51, "lfdu"},{52, "stfs"},
		{53, "stfsu"},{54, "stfd"},{55, "stfdu"},{59, "UNKNOWN FLOATING SINGLE"},{63, "UNKNOWN FLOATING DOUBLE"}
		});

	static const std::unordered_map<int, std::string> secondary_codes_sb({
		{0, "mcrf"},{16, "bclr"},{33, "crnor"},{50 ,"rfi"},{129, "crandc"},{150, "isync"},{193, "crxor"},{225, "crnand"},{257, "crand"},{289, "creqv"},
		{417, "crorc"},{449, "cror"},{528, "bcctr"}
		});

	static const std::unordered_map<int, std::string> secondary_codes_math({
		{0, "cmp"},{4, "tw"},{8, "subfc"},{10, "addc"},{11, "mulhwu"},{19, "mfcr"},{20, "lwarx"},{23, "lwzx"},{24, "slw"},{26, "cntlzw"},{28, "and"},{32, "cmpl"},
		{40, "subf"},{54, "dcbst"},{55, "lwzux"},{60, "andc"},{75, "mulhw"},{83, "mfmsr"},{86, "dcbf"},{87, "lbzx"},{104, "neg"},{119, "lbzux"},{124, "nor"},
		{136, "subfe"},{138, "adde"},{144, "mtcrf"},{146, "mtmsr"},{150, "stwcx"},{151, "stwx"},{183, "stwux"},{200, "subfze"},{202, "addze"},{210, "mtsr"},
		{215, "stbx"},{232, "subfme"},{234, "addme"},{235, "mullw"},{242, "mtsrin"},{246, "dcbtst"},{247, "stbux"},{266, "add"},{278, "dcbt"},{279, "lhzx"},
		{284, "eqv"},{306, "tlbie"},{310, "eciwx"},{311, "lhzux"},{316, "xor"},{339, "mfspr"},{343, "lhax"},{370, "tlbia"},{371, "mftb"},{375, "lhaux"},{407, "sthx"},
		{412, "orc"},{438, "ecowx"},{439, "sthux"},{444, "or"},{459, "divwu"},{467, "mtspr"},{470, "dcbi"},{476, "nand"},{491, "divw"},{512, "mcrxr"},{520, "subfco"},
		{522, "addco"},{533, "lswx"},{534, "lwbrx"},{535, "lfsx"},{536, "srw"},{552, "subfo"},{566, "tlbsync"},{567, "lfsux"},{595, "mfsr"},{597, "lswi"},
		{598, "sync"},{599, "lfdx"},{616, "nego"},{631, "lfdux"},{648, "subfeo"},{650, "addeo"},{661, "stswx"},{662, "stwbrx"},{663, "stfsx"},{695, "stfsux"},
		{712, "subfzeo"},{714, "addzeo"},{725, "stswi"},{727, "stfdx"},{744, "subfmeo"},{746, "addmeo"},{747, "mullwo"},{758, "dcba"},{759, "stfdux"},{778, "addo"},
		{790, "lhbrx"},{792, "sraw"},{824, "srawi"},{854, "eieio"},{918, "sthbrx"},{922, "extsh"},{954, "extsb"},{971, "divwuo"},{982, "icbi"},{983, "stfiwx"},
		{1003, "divwo"},{1014, "dcbz"}
		});

	static const std::unordered_map<int, std::string> secondary_codes_float({
		{18, "fdivs"},{20, "fsubs"},{21, "fadds"},{22, "fsqrts"},{24, "fres"},{25, "fmuls"},{28, "fmsubs"},{29, "fmadds"},{30, "fnmsubs"},{31, "fnmadds"}
		});

	static const std::unordered_map<int, std::string> secondary_codes_double({
		{0, "fcmpu"},{12, "frsp"},{14, "fctiw"},{15, "fctiwz"},{18, "fdiv"},{20, "fsub"},{21, "fadd"},{22, "fsqrt"},{23, "fsel"},{25, "fmul"},{26, "frsqrte"},
		{28, "fmsub"},{29, "fmadd"},{30, "fnmsub"},{31, "fnmadd"},{32, "fcmpo"},{38, "mtfsb1"},{40, "fneg"},{64, "mcrfs"},{70, "mtfsb0"},{72, "fmr"},
		{134, "mtfsfi"},{136, "fnabs"},{264, "fabs"},{583, "mffs"},{711, "mtfsf"}
		});

	static const std::unordered_map<int, std::string> primary_patterns({
		{3, "{X|6,10}, r{11,15}, {sX|16,31}"},{7, "r{6,10}, r{11,15}, {sX|16,31}"},{8, "r{6,10}, r{11,15}, {sX|16,31}"},{16, "{6,10}, {11,15}, {X|16,29}"},{17, "{}"},{18, "{X|6,29}"},
		{19, "crb{6,10}, crb{11,15}, crb{16,20}"},{20, "r{11,15}, r{6,10}, {X|16,20}, {X|21,25}, {X|26,30}"},{21, "r{11,15}, r{6,10}, {X|16,20}, {X|21,25}, {X|26,30}"},
		{23, "r{11,15}, r{6,10}, r{16,20}, {X|21,25}, {X|26,30}"},{24, "r{11,15}, r{6,10}, {X|16,31}"},{25, "r{11,15}, r{6,10}, {X|16,31}"},{26, "r{11,15}, r{6,10}, {X|16,31}"},
		{27, "r{11,15}, r{6,10}, {X|16,31}"},{28, "r{11,15}, r{6,10}, {X|16,31}"},{29, "r{11,15}, r{6,10}, {X|16,31}"},{31, "r{6,10}, r{11,15}, r{16,20}"},{32, "r{6,10}, {X|16,31}(r{11,15})"},
		{33, "r{6,10}, {X|16,31}(r{11,15})"},{34, "r{6,10}, {X|16,31}(r{11,15})"},{35, "r{6,10}, {X|16,31}(r{11,15})"},{36, "r{6,10}, {X|16,31}(r{11,15})"},{37, "r{6,10}, {X|16,31}(r{11,15})"},
		{38, "r{6,10}, {X|16,31}(r{11,15})"},{39, "r{6,10}, {X|16,31}(r{11,15})"},{40, "r{6,10}, {X|16,31}(r{11,15})"},{41, "r{6,10}, {X|16,31}(r{11,15})"},{42, "r{6,10}, {X|16,31}(r{11,15})"},
		{43, "r{6,10}, {X|16,31}(r{11,15})"},{44, "r{6,10}, {X|16,31}(r{11,15})"},{45, "r{6,10}, {X|16,31}(r{11,15})"},{46, "r{6,10}, {X|16,31}(r{11,15})"},{47, "r{6,10}, {X|16,31}(r{11,15})"},
		{48, "fr{6,10}, {X|16,31}(r{11,15})"},{49, "fr{6,10}, {X|16,31}(r{11,15})"},{50, "fr{6,10}, {X|16,31}(r{11,15})"},{51, "fr{6,10}, {X|16,31}(r{11,15})"},{52, "fr{6,10}, {X|16,31}(r{11,15})"},
		{53, "fr{6,10}, {X|16,31}(r{11,15})"},{54, "fr{6,10}, {X|16,31}(r{11,15})"},{55, "fr{6,10}, {X|16,31}(r{11,15})"},{59, "fr{6,10}, fr{11,15}, fr{21,25}, fr{16,20}"}
		});

	static const std::unordered_map<int, std::string> secondary_patterns_sb({
		{0, "crf{6,8}, crf{11,13}"},{50, "{}"},{150, "{}"}
		});

	static const std::unordered_map<int, std::string> secondary_patterns_math({
		{4, "{6,10}, r{11,15}, r{16,20}"},{19, "r{6,10}"},{24, "r{11,15}, r{6,10}, r{16,20}"},{26, "r{6,10}, r{11,15}"},{28, "r{11,15}, r{6,10}, r{16,20}"},{54, "r{11,15}, r{16,20}"},
		{60, "r{11,15}, r{6,10}, r{16,20}"},{83, "r{6,10}"},{86, "r{11,15}, r{16,20}"},{104, "r{6,10}, r{11,15}"},{124, "r{11,15}, r{6,10}, r{16,20}"},{146, "r{6,10}"},{200, "r{6,10}, r{11,15}"},
		{202, "r{6,10}, r{11,15}"},{210, "{12,15}, r{6,10}"},{232, "r{6,10}, r{11,15}"},{234, "r{6,10}, r{11,15}"},{242, "r{6,10}, r{16,20}"},{246, "r{11,15}, r{16,20}"},
		{284, "r{11,15}, r{6,10}, r{16,20}"},{316, "r{11,15}, r{6,10}, r{16,20}"},{444, "r{11,15}, r{6,10}, r{16,20}"},{278, "r{11,15}, r{16,20}"},{306, "r{16,20}"},{370, "{}"},
		{412, "r{11,15}, r{6,10}, r{16,20}"},{444, "r{11,15}, r{6,10}, r{16,20}"},{470, "r{11,15}, r{16,20}"},{512, "crf{6,8}"},{476, "r{11,15}, r{6,10}, r{16,20}"},
		{535, "fr{6,10}, r{11,15}, r{16,20}"},{536, "r{11,15}, r{6,10}, r{16,20}"},{566,"{}"},{567, "fr{6,10}, r{11,15}, r{16,20}"},{595, "r{6,10}, {12,15}"},{597, "r{6,10}, r{11,15}, {X|16,20}"},
		{598, "{}"},{599, "fr{6,10}, r{11,15}, r{16,20}"},{616, "r{6,10}, r{11,15}"},{631, "fr{6,10}, r{11,15}, r{16,20}"},{663, "fr{6,10}, r{11,15}, r{16,20}"},
		{695, "fr{6,10}, r{11,15}, r{16,20}"},{712, "r{6,10}, r{11,15}"},{714, "r{6,10}, r{11,15}"},{725, "r{6,10}, r{11,15}, {X|16,20}"},{727, "fr{6,10}, r{11,15}, r{16,20}"},
		{744, "r{6,10}, r{11,15}"},{746, "r{6,10}, r{11,15}"},{758, "r{11,15}, r{16,20}"},{792, "r{11,15}, r{6,10}, r{16,20}"},{824, "r{11,15}, r{6,10}, {X|16,20}"},{854,"{}"},
		{922, "r{11,15}, r{6,10}"},{954, "r{11,15}, r{6,10}"},{982, "r{11,15}, r{16,20}"},{983, "fr{6,10}, r{11,15}, r{16,20}"},{1014, "r{11,15}, r{16,20}"}
		});

	static const std::unordered_map<int, std::string> secondary_patterns_float({
		{18, "fr{6,10}, fr{11,15}, fr{16,20}"},{20, "fr{6,10}, fr{11,15}, fr{16,20}"},{21, "fr{6,10}, fr{11,15}, fr{16,20}"},{22, "fr{6,10}, fr{16,20}"},{24, "fr{6,10}, fr{16,20}"},
		{25, "fr{6,10}, fr{11,15}, fr{21,25}"}
		});

	static const std::unordered_map<int, std::string> secondary_patterns_double({
		{0, "crf{6,8}, fr{11,15}, fr{16,20}"},{12, "fr{6,10}, fr{16,20}"},{14, "fr{6,10}, fr{16,20}"},{15, "fr{6,10}, fr{16,20}"},{18, "fr{6,10}, fr{11,15}, fr{16,20}"},
		{20, "fr{6,10}, fr{11,15}, fr{16,20}"},{21, "fr{6,10}, fr{11,15}, fr{16,20}"},{22, "fr{6,10}, fr{16,20}"},{23, "fr{6,10}, fr{11,15}, fr{21,25}, fr{16,20}"},
		{25, "fr{6,10}, fr{11,15}, fr{21,25}"},{26, "fr{6,10}, fr{16,20}"},{28, "fr{6,10}, fr{11,15}, fr{21,25}, fr{16,20}"},{29, "fr{6,10}, fr{11,15}, fr{21,25}, fr{16,20}"},
		{30, "fr{6,10}, fr{11,15}, fr{21,25}, fr{16,20}"},{31, "fr{6,10}, fr{11,15}, fr{21,25}, fr{16,20}"},{32, "crf{6,8}, fr{11,15}, fr{16,20}"},{38, "crb{6,10}"},
		{40, "fr{6,10}, fr{16,20}"},{64, "crf{6,8}, crf{11,13}"},{70, "crb{6,10}"},{72, "fr{6,10}, fr{16,20}"},{134, "crf{6,8}, {X|16,19}"},{136, "fr{6,10}, fr{16,20}"},
		{264, "fr{6,10}, fr{16,20}"},{583, "fr{6,10}, fr{16,20}"},{711, "{X|7,14}, fr{16,20}"}
		});

}